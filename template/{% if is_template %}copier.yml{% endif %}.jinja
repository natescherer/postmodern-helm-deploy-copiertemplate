## Initial Settings
_min_copier_version: 9.3.1

_jinja_extensions:
  # External Dependencies
  - copier_templates_extensions.TemplateExtensionLoader
  - cookiecutter.extensions.SlugifyExtension
  - jinja2_shell_extension.ShellExtension
  - jinja2_time.TimeExtension
  # Internal Dependencies
  - extensions/azure_devops_extension.py:AzureDevOpsExtension
  - extensions/context.py:ContextUpdater
  - extensions/github_extension.py:GitHubExtension
  - extensions/path_tests_extension.py:PathTestsExtension
  - extensions/phase_extension.py:PhaseExtension
  - extensions/slugify_extension.py:SlugifyExtension
  - extensions/version_extension.py:VersionExtension
  - extensions/yaml_quote_extension.py:YamlQuoteExtension

_subdirectory: template

## The below variables are used to track parent/child template relationships and should not be manually adjusted.
parent_template_name:
  type: str
  default: {{ project_name | quote_for_yaml }}
  when: false
parent_template_url:
  type: str
  default: {% if using_github %}{% if github_org %}https://github.com/{{ github_org }}/{{ repo_name }}{% else %}https://github.com/{{ github_username }}/{{ repo_name }}{% endif %}{% endif %}{% if using_azdo %}https://dev.azure.com/{{ azdo_org }}/{{ azdo_project | replace(" ","%20") }}/_git/{{ repo_name }}{% endif %}
  when: false

{%- raw %}

## Questions
author_name:
  type: str
  help: The name to whom this project will be credited. Autodetect attempted from Git 'user.name'.
  default: "{{ 'git config --global user.name' | shell() | trim }}"

developer_platform:
  type: str
  help: The platform where you are going to host your Git repo and CI/CD. This value should not be changed on update.
  choices:
    - GitHub
    - Azure DevOps

# Restore validators once https://github.com/copier-org/copier/issues/1050 is resolved
repo_actions:
  type: str
  help: If you are making a new project and want to have this template create the repo, choose 'Create Repo'. If you are applying this template to an existing project and want to just set repository rules, choose 'Set Repo Rules'. If this is an update run, or you want don't want the template to do any repo-related automations, choose 'None'.
  choices:
    Create Repo:
      value: Create Repo
      # validator: "{% if path_exists(_copier_conf.dst_path) %}Destination Folder Exists{% endif %}"
    Set Repo Rules:
      value: Set Repo Rules
      # validator: "{% if path_missing(_copier_conf.dst_path) %}Destination Folder Missing{% endif %}"
    None:
      value: None

github_token:
  type: str
  secret: true
  default: ""
  help: A GitHub Personal Access Token which will be used to {% if repo_actions == 'Create Repo' %}initialize your new repository and apply rules.{% else %}apply rules to your existing repo.{% endif %} Value is not saved.
  when: "{{ developer_platform == 'GitHub' and repo_actions != 'None' }}"
  validator: "{% if github_token is not valid_gh_token and (developer_platform == 'GitHub' and repo_actions != 'None') %}GitHub Token Invalid{% endif %}"

github_username:
  type: str
  help: Your GitHub username. Repo will be created under this user unless an org is specified. Autodetect attempted from Git 'user.email'. This value should not be changed on update.
  default: "{{ (('git config --global user.email' | shell()).split('+') | last).split('@') | first }}"
  when: "{{ developer_platform == 'GitHub' }}"

github_org:
  type: str
  help: (OPTIONAL) If this repo {% if repo_actions == 'Create Repo' %}should be created under{% else %}is part of{% endif %} a GitHub organization, supply its name here. This value should not be changed on update.
  when: "{{ developer_platform == 'GitHub' }}"

azdo_org:
  type: str
  help: The Azure DevOps organization to use for the new project. This value should not be changed on update.
  when: "{{ developer_platform == 'Azure DevOps' }}"
  validator: "{% if azdo_org is not extant_azdo_org %}Azure DevOps Organization Does Not Exist{% endif %}"

azdo_token:
  type: str
  secret: true
  default: ""
  help: An Azure DevOps Personal Access Token which will be used to {% if repo_actions == 'Create Repo' %}initialize your new repository and apply rules.{% else %}apply rules to your existing repo.{% endif %} Value is not saved.
  when: "{{ developer_platform == 'Azure DevOps' and repo_actions != 'None' }}"
  validator: "{% if azdo_token is not valid_azdo_token_for_org(azdo_org) and (developer_platform == 'Azure DevOps' and repo_actions != 'None') %}Azure DevOps Token Invalid{% endif %}"

azdo_project:
  type: str
  help: An Azure DevOps project in organization '{{ azdo_org }}'. This value should not be changed on update.
  when: "{{ developer_platform == 'Azure DevOps' }}"

repo_name:
  type: str
  help: The name of this project's Git repository. Will be {% if repo_actions == 'Create Repo' %}created{% else %}reused{% endif %} by this template. This value should not be changed on update.
  # Validator is currently disabled as it is buggy on updates
  # validator: |
  #   {% if repo_actions == 'Create Repo' -%}
  #     {%- if developer_platform == 'GitHub' -%}
  #       {%- if repo_name is not available_gh_repo_name_for_owner(github_username) -%}
  #         GitHub Repo {{ github_username }}/{{ repo_name }} already exists
  #       {%- endif -%}
  #     {%- elif developer_platform == 'Azure DevOps' -%}
  #       {%- if repo_name is not available_azdo_repo_name_for_token_and_org_and_project(azdo_token, azdo_org, azdo_project) -%}
  #         Azure Devops Repo {{ azdo_org }}/{{ azdo_project }}/{{ repo_name }} already exists
  #       {%- endif -%}
  #     {%- endif -%}
  #   {%- else -%}
  #     {%- if developer_platform == 'GitHub' -%}
  #       {%- if repo_name is available_gh_repo_name_for_owner(github_username) -%}
  #         GitHub Repo {{ github_username }}/{{ repo_name }} does not exist
  #       {%- endif -%}
  #     {%- elif developer_platform == 'Azure DevOps' -%}
  #       {%- if repo_name is available_azdo_repo_name_for_token_and_org_and_project(azdo_token, azdo_org, azdo_project) -%}
  #         Azure Devops Repo {{ azdo_org }}/{{ azdo_project }}/{{ repo_name }} does not exist
  #       {%- endif -%}
  #     {%- endif -%}
  #   {%- endif %}

project_type:
  type: str
  help: If you are creating another Copier template that will inherit from this one, choose Template. Otherwise, choose Standard. This value should not be changed on update.
  choices:
    - Standard
    - Template

project_name:
  type: str
  help: The friendly name of the project that will be used in documentation.

project_short_description:
  type: str
  help: Enter a short description of your project to be used in documentation.

project_website:
  type: str
  help: (OPTIONAL) Enter the website for your project.

project_visibility:
  type: str
  help: Choose if you want this project to be Public or Private. This value should not be changed on update.
  choices:
    Public:
      value: Public
      validator: "{% if developer_platform == 'Azure DevOps' %}Not Supported on Azure DevOps{% endif %}"
    Private:
      value: Private

license:
  type: str
  help: Choose if you wish to use The MIT License for this project or provide your own.
  choices:
    - MIT
    - Provide Own
  when: "{{ project_visibility == 'Public' }}"

lifecycle:
  type: str
  help: Choose what state this project is in.
  choices:
    - Pre-Alpha
    - Alpha
    - Beta
    - Stable
    - Inactive

container_registry_type:
  type: str
  help: Choose what type of container registry stores your Helm chart.
  choices:
    Public & Unauthenticated Registry:
      value: Public
    Azure Container Registry:
      value: Azure Container Registry
  when: "{{ project_type == 'Standard' }}"

public_helm_repo_url:
  type: str
  help: The URL of the public Helm repo; what you'd provide to 'helm repo add'.
  when: "{{ container_registry_type == 'Public' }}"

acr_login_method:
  type: str
  help: Choose login method for Azure Container Registry.
  choices:
    - Admin Credentials via Service Connection
    - Admin Credentials via Pipeline Variable
  when: "{{ container_registry_type == 'Azure Container Registry' }}"

acr_name:
  type: str
  help: The name of the Azure Container Registry
  when: "{{ container_registry_type == 'Azure Container Registry' }}"

acr_service_connection:
  type: str
  help: The name of the Azure DevOps Service Connection that has rights to the ACR.
  when: "{{ acr_login_method == 'Admin Credentials via Service Connection' }}"

helm_chart_name:
  type: str
  help: The name of the Helm chart to deploy; what you'd provide to 'helm install'.
  when: "{{ project_type == 'Standard' }}"

helm_release_name:
  type: str
  help: The name of the Helm deployment that will be used with 'helm install'.
  default: "{{ helm_chart_name }}"
  when: "{{ project_type == 'Standard' }}"

## Computed Values

using_github:
  type: bool
  default: "{% if developer_platform == 'GitHub' %}true{% endif %}"
  when: false

using_azdo:
  type: bool
  default: "{% if developer_platform == 'Azure DevOps' %}true{% endif %}"
  when: false

using_mit:
  type: bool
  default: "{% if license == 'MIT' %}true{% endif %}"
  when: false

is_public:
  type: bool
  default: "{% if project_visibility == 'Public' %}true{% endif %}"
  when: false

is_standard:
  type: bool
  default: "{% if project_type == 'Standard' %}true{% endif %}"
  when: false

is_template:
  type: bool
  default: "{% if project_type == 'Template' %}true{% endif %}"
  when: false

should_create_repo:
  type: bool
  default: "{% if repo_actions == 'Create Repo' %}true{% endif %}"
  when: false

should_set_repo_settings:
  type: bool
  default: "{% if repo_actions == 'Create Repo' or repo_actions == 'Set Repo Rules' %}true{% endif %}"
  when: false

helm_repo_name:
  type: str
  default: "{% if container_registry_type == 'Public' %}{{ public_helm_repo_url.split('//') | last | slugify }}{% elif container_registry_type == 'Azure Container Registry' %}{{ acr_name + '.azurecr.io' | slugify }}{% endif %}"
  when: false

helm_repo_url:
  type: str
  default: "{% if container_registry_type == 'Public' %}{{ public_helm_repo_url }}{% endif %}"
  when: false

## Tasks

_tasks:
  - command: invoke copy-template-files --answers-json '{{ _copier_answers | to_json }}'
    when: "{% if is_template %}true{% endif %}"
  - command: invoke create-repo-github --answers-json '{{ _copier_answers | to_json }}'
    when: "{% if should_create_repo and using_github %}true{% endif %}"
  - command: invoke create-repo-azdo --answers-json '{{ _copier_answers | to_json }}'
    when: "{% if should_create_repo and using_azdo %}true{% endif %}"
  - command: invoke set-repo-settings-github --answers-json '{{ _copier_answers | to_json }}'
    when: "{% if should_set_repo_settings and using_github %}true{% endif %}"
  - command: invoke initialize-repo-and-commit-files --answers-json '{{ _copier_answers | to_json }}'
    when: "{% if should_create_repo %}true{% endif %}"
  - command: invoke set-branch-protection-ruleset-github --answers-json '{{ _copier_answers | to_json }}'
    when: "{% if should_set_repo_settings and using_github %}true{% endif %}"
  - command: invoke create-pipelines-azdo --answers-json '{{ _copier_answers | to_json }}'
    when: "{% if should_set_repo_settings and using_azdo %}true{% endif %}"
  - invoke delete-unneeded-template-files

_message_after_update: >-
  {% if lifecycle == 'Stable' and developer_platform == 'GitHub' and current_release_please_version_is_pre_1 %}
  It looks like you have switched this project's lifecycle to 'Stable' for the first time. If this is true, merge the following commit to main to have Release Please bump the version number properly.

  git commit --allow-empty -m "chore: bump version to v1.0.0" -m "Release-As: 1.0.0"
  {% endif %}

{%- endraw %}
---
!include copier-deployment-envs.yml

---
!include copier-question-overrides.yml
