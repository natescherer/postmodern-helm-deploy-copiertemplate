name: $(BuildId)

trigger:
  branches:
    exclude:
    - '*'

parameters:
  - name: HelmChartVersion
    type: string

variables:
{%- if container_registry_type == "Azure Container Registry" %}
  AcrName: {{ acr_name }}
{%- elif container_registry_type == "Public" %}
  HelmRepoName: {{ helm_repo_name }}
  HelmRepoUrl: {{ helm_repo_url }}
{%- endif %}
  HelmChartName: {{ helm_chart_name }}
{%- if container_registry_type == "Azure Container Registry" %}
  HelmChartLocation: oci://$(AcrName).azurecr.io/helm/$(HelmChartName)
{%- elif container_registry_type == "Public" %}
  HelmChartLocation: $(HelmRepoName)/$(HelmChartName)
{%- endif %}
  HelmReleaseName: {{ helm_release_name }}

stages:
  - stage:
    pool:
      vmImage: ubuntu-latest
    displayName: Set up Environment
    jobs:
      - job: set_up_env
        displayName: Set up Environment
        steps:
          - pwsh: |
              $Date = Get-Date -Format "yyyyMMddHHmm"
              Write-Host "##vso[build.updatebuildnumber]Chart-$($env:HelmChartVersion)_$Date"
            displayName: Calculate and set build number
            env:
              HelmChartVersion: {% raw %}${{ parameters.HelmChartVersion }}{% endraw %}
            failOnStderr: true
{%- for env in k8s_envs %}
{% set base_name = env["k8s_cluster"] + "_" + env["k8s_ns"] %}
  - stage: {{ env["azdo_stage_name"] }}
    {%- if env["azdo_pool_type"] == "private" %}
    pool: {{ env["azdo_pool_name"] }}
    {%- else %}
    pool:
      vmImage: {{ env["azdo_pool_name"] }}
    {%- endif %}
    {%- if env["azdo_depends_on"] %}
    dependsOn: {{ env["azdo_depends_on"] }}
    {%- endif %}
    variables:
      K8sNamespace: {{ env["k8s_ns"] }}
      {%- if env["k8s_type"] == "aks" %}
      AKSCluster: {{ env["k8s_cluster"] }}
      AKSClusterResourceGroup: {{ env["aks_resource_group"] }}
      {%- endif %}
    jobs:
      - deployment: {{ base_name | slugify | replace("-","_") }}
        environment: {{ env["k8s_cluster"] }}
        strategy:
          runOnce:
            deploy:
              steps:
                {%- if env["az_key_vault_name"] %}
                - task: AzureKeyVault@2
                  displayName: Get Secrets from Key Vault
                  inputs:
                    azureSubscription: {{ env["az_key_vault_service_connection"] }}
                    KeyVaultName: {{ env["az_key_vault_name"] }}
                    SecretsFilter: 'secret1'
                    RunAsPreJob: false
                {%- endif %}
                {%- if env["k8s_type"] == "aks" %}
                - template: template-aks-login.yml
                  parameters:
                    AKSServiceConnection: {{ env["aks_service_connection"] }}
                {%- endif %}
                - template: template-helm-install-or-upgrade.yml
                  parameters:
                    AKSServiceConnection: {{ env["aks_service_connection"] }}
                    AzKeyVaultServiceConnection: {{ env["az_key_vault_service_connection"] }}
                    HelmChartVersion: {% raw %}${{ parameters.HelmChartVersion }}{% endraw %}
{%- endfor %}
